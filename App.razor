@using Blog_Web.Services
@* @using Microsoft.AspNetCore.Components.Authorization *@

@inject AuthService AuthService
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            @if (IsPublicRoute(Navigation.ToBaseRelativePath(Navigation.Uri)) || AuthService.IsLoggedIn)
            {
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            }
            else
            {
                Navigation.NavigateTo("/login", true);
            }
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing here!</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        await AuthService.InitializeAsync();
    }

    private bool IsPublicRoute(string route) =>
        route.Equals("home", StringComparison.OrdinalIgnoreCase) ||
        route.Equals("login", StringComparison.OrdinalIgnoreCase);
}
