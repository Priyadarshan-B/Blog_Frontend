@page "/post"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthService AuthService

@using Blog_Web.Services
@using Blog_Web.Shared

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4 post-container">
    <MudText Typo="Typo.h4" GutterBottom="true">For You</MudText>

    @if (posts == null)
    {
        <MudProgressCircular Indeterminate="true" />
    }
    else if (!posts.Any())
    {
        <MudText>No posts found.</MudText>
    }
    else
    {
        <div class="post-list">
            @foreach (var post in posts)
            {
                <div class="post-card" @onclick="() => NavigateToBlog(post.Id)">
                    <div class="post-left">
                        <MudText Typo="Typo.h6" Class="post-title">@post.Title</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            @post.AuthorName - @post.CreatedAt.ToLocalTime().ToString("g")
                        </MudText>
                        <MudText Typo="Typo.body1">
                            @((MarkupString)(post.Content.Length > 120 ? post.Content.Substring(0, 120) + "..." : post.Content))
                        </MudText>
                    </div>
                    <div class="post-actions">
                        <div class="comment-actions">
                            <MudIcon Icon="@Icons.Material.Filled.ThumbUp" />
                            <MudText Class="comment-text">@post.Likes Likes</MudText>
                        </div>
                        <div class="comment-actions">
                            <MudIcon Icon="@Icons.Material.Filled.Comment" />
                            <MudText Class="comment-text">@post.CommentCount Comments</MudText>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</MudContainer>

@code {
    private List<Post>? posts;

    protected override async Task OnInitializedAsync()
    {
        await RefreshPosts();
    }

    private async Task RefreshPosts()
    {
        posts = await Http.GetFromJsonAsync<List<Post>>("http://localhost:5000/api/post");
    }

    private void NavigateToBlog(string postId)
    {
        Navigation.NavigateTo($"/blogpage/{postId}");
    }
}
